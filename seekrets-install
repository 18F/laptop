#!/bin/bash

SCRIPTPATH=$( cd "$(dirname "$0")" ; pwd -P )

# Add new baseline rules here
#rsa-private.rule
SEEKRET_DEFAULT_RULES="
aws.rule
newrelic.rule
mandrill.rule
slack.rule"

if [ -d "${SCRIPTPATH}/seekret-rules" ]; then
  SEEKRET_DEFAULT_RULES=$( ls "${SCRIPTPATH}/seekret-rules" )
fi

fancy_echo() {
  # shellcheck disable=SC2039
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

toolminversion() {
    # shellcheck disable=SC2039
    local prog="$1" value="$2" version

    version=$($prog --version | awk '{print $NF; exit}')

    awk -v v1="$version" -v v2="$value" 'BEGIN {
        split(v1, a, /\./); split(v2, b, /\./);

        if (a[1] < b[1]) {
          # major version is lower
          exit 1;
        }
        if (a[1] > b[1]) {
          # major version is higher
          exit 0;
        }

        # major versions match

        if (a[2] < b[2]) {
          # minor version is lower
          exit 2;
        }
        if (a[2] > b[2]) {
          # minor version is higher
          exit 0;
        }

        # minor versions match

        if(a[3] < b[3]) {
          #patch version is lower
          exit 3;
        }

        # patch version is higher or matches
        exit 0;
    }'
}

get_platform() {
  case $OSTYPE in
    linux*)
      PLATFORM=linux
      ;;
    darwin*)
      PLATFORM=osx
      ;;
    *)
      echo "unknown platform: $OSTYPE"
      exit 1
      ;;
  esac
}

set -e

if toolminversion git 2.9.1; then
  fancy_echo "Installing Seekret"
  WORK_DIR=$( mktemp -d -t "$( basename "$(pwd)XXXXX" )" )
  pushd "${WORK_DIR}" > /dev/null
  git init > /dev/null
  get_platform
  LATEST_RELEASE_URL=$(curl -s https://github.com/18F/git-seekret/releases | grep "18F/git-seekret/releases/download" | grep ${PLATFORM} | head -n 1 | cut -d '"' -f 2)
  BIN_LOCATION="/usr/local/bin"
  SUDO_REQUIRED=true
  if [[ -d "$HOME/bin" && ":$PATH:" == *":$HOME/bin:"* ]]; then
    BIN_LOCATION="$HOME/bin"
    SUDO_REQUIRED=false
  fi
  INSTALL_CMD="curl -L -# \"https://github.com${LATEST_RELEASE_URL}\" -o \"${BIN_LOCATION}/git-seekret\" > /dev/null && chmod a+x \"${BIN_LOCATION}/git-seekret\""
  echo "Installing in $BIN_LOCATION"
  if [  "$SUDO_REQUIRED" = false ]; then
    eval "$INSTALL_CMD"
  else
    sudo sh -c "$INSTALL_CMD"
  fi

  fancy_echo "Downloading Seekret rules"
  export SEEKRET_RULES_PATH="${HOME}/.git-support/seekret-rules"
  mkdir -p "${SEEKRET_RULES_PATH}"
  # Download rules
  SEEKRET_RULES_URL="https://raw.githubusercontent.com/18F/laptop/master/seekret-rules"
  SEEKRET_RULES="${SEEKRET_RULES:=$SEEKRET_DEFAULT_RULES}"
  for rule in ${SEEKRET_RULES}
  do
      printf "\t%s: " "$rule"
      if [ -d "${SCRIPTPATH}/seekret-rules" ]; then
        cp "${SCRIPTPATH}/seekret-rules/${rule}" "${SEEKRET_RULES_PATH}"
      else
        (cd "${SEEKRET_RULES_PATH}" \
          && curl -# -o "${rule}" "${SEEKRET_RULES_URL}/${rule}" > /dev/null)
      fi
      printf "done\n"
  done
  fancy_echo "Configuring Seekret"
  mkdir -p "${HOME}/.git-support/hooks"
  git config --global core.hooksPath "${HOME}/.git-support/hooks"
  git seekret --global config --init
  # Activate all installed rules
  git seekret --global rules --enable-all
  git seekret --global hook --enable-all

  popd > /dev/null
  rm -rf "${WORK_DIR}"
  fancy_echo "Finished installing Seekret"
else
  echo
  echo "Looks like you need to install git 2.9.1 or better."
  echo
  echo "If you are using git from the command line, this should"
  echo "be as easy as upgrading with homebrew:"
  echo "   $ brew update && brew upgrade git"
  echo
  echo "If you are using GitHub Desktop, please upgrade to version"
  echo "221 or better for OS X. Download: https://desktop.github.com/"
  echo
  exit 1;
fi
